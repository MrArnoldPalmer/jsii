// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`jsii-config snapshots builds prompt questions with current config values as defaults 1`] = `
Array [
  Object {
    "choices": Array [
      "java",
      "python",
      "dotnet",
    ],
    "default": Array [
      "java",
      "dotnet",
      "python",
    ],
    "message": "Target Languages",
    "name": "jsiiTargets",
    "type": "checkbox",
  },
  Object {
    "choices": Array [
      "deprecated",
      "experimental",
      "stable",
      "external",
    ],
    "default": "experimental",
    "message": "Jsii Stability - stability of compiled module apis",
    "name": "stability",
    "type": "list",
  },
  Object {
    "message": "Jsii Type Definitions - compiled typescript definitions file for module (e.g. index.d.ts)",
    "name": "types",
    "type": "input",
    "validate": [Function],
  },
  Object {
    "default": "dist",
    "message": "Output directory for typescript compiler (e.g. dist)",
    "name": "jsii.outdir",
    "type": "input",
    "validate": [Function],
  },
  Object {
    "choices": Array [
      "full",
      "short",
    ],
    "default": "short",
    "message": "Version format, default is full",
    "name": "jsii.versionFormat",
    "type": "list",
  },
  Object {
    "default": "software.amazon.jsii.tests.calculator.base",
    "message": "Java Package - root java package name under which the types will be declared (e.g. software.amazon.module.core)",
    "name": "jsii.targets.java.package",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "default": "software.amazon.jsii.tests",
    "message": "Maven GroupID - package group id (e.g. software.amazon.module)",
    "name": "jsii.targets.java.maven.groupId",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "default": "calculator-base",
    "message": "Maven ArtifactID - package artifact id (e.g. core)",
    "name": "jsii.targets.java.maven.artifactId",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "filter": [Function],
    "message": "Maven Version Suffix - optional suffix appended to the end of the maven package's version field (e.g. .DEVPREVIEW)",
    "name": "jsii.targets.java.maven.versionSuffix",
    "type": "input",
    "when": [Function],
  },
  Object {
    "default": "scope.jsii-calc-base",
    "message": "Python Distname - PyPI distribution name for the package (e.g. module-name.core)",
    "name": "jsii.targets.python.distName",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "default": "scope.jsii_calc_base",
    "message": "Python Module - name of the generated Python module (e.g. module_name.core)",
    "name": "jsii.targets.python.module",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "default": "Amazon.JSII.Tests.CalculatorNamespace.BaseNamespace",
    "message": ".NET Namespace - root namespace under which types will be declared (e.g. Amazon.Module)",
    "name": "jsii.targets.dotnet.namespace",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "default": "Amazon.JSII.Tests.CalculatorPackageId.BasePackageId",
    "message": ".NET Package Id - identifier of the package in the NuGet registry (e.g. Amazon.Module)",
    "name": "jsii.targets.dotnet.packageId",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "filter": [Function],
    "message": ".NET Icon Url - optional url of the icon to be shown in the NuGet gallery (e.g. https://raw.githubusercontent.com/module-icon.png)",
    "name": "jsii.targets.dotnet.iconUrl",
    "type": "input",
    "when": [Function],
  },
  Object {
    "default": "",
    "filter": [Function],
    "message": ".NET Version Suffix - optional suffix that will be appended at the end of the NuGet package's version field, must begin with a \\"-\\" (e.g. -devpreview)",
    "name": "jsii.targets.dotnet.versionSuffix",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "default": false,
    "message": ".NET Sign Assembly - whether the assembly should be strong-name signed. Defaults to false when not specified",
    "name": "jsii.targets.dotnet.signAssembly",
    "type": "confirm",
    "when": [Function],
  },
  Object {
    "default": "",
    "message": ".NET Assembly Originator Key File - path to the strong-name signing key to be used (e.g. ../../key.snk)",
    "name": "jsii.targets.dotnet.assemblyOriginatorKeyFile",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
]
`;

exports[`jsii-config snapshots builds prompt questions with no current jsii config 1`] = `
Array [
  Object {
    "choices": Array [
      "java",
      "python",
      "dotnet",
    ],
    "default": Array [],
    "message": "Target Languages",
    "name": "jsiiTargets",
    "type": "checkbox",
  },
  Object {
    "choices": Array [
      "deprecated",
      "experimental",
      "stable",
      "external",
    ],
    "default": "experimental",
    "message": "Jsii Stability - stability of compiled module apis",
    "name": "stability",
    "type": "list",
  },
  Object {
    "message": "Jsii Type Definitions - compiled typescript definitions file for module (e.g. index.d.ts)",
    "name": "types",
    "type": "input",
    "validate": [Function],
  },
  Object {
    "default": "dist",
    "message": "Output directory for typescript compiler (e.g. dist)",
    "name": "jsii.outdir",
    "type": "input",
    "validate": [Function],
  },
  Object {
    "choices": Array [
      "full",
      "short",
    ],
    "default": "full",
    "message": "Version format, default is full",
    "name": "jsii.versionFormat",
    "type": "list",
  },
  Object {
    "message": "Java Package - root java package name under which the types will be declared (e.g. software.amazon.module.core)",
    "name": "jsii.targets.java.package",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "message": "Maven GroupID - package group id (e.g. software.amazon.module)",
    "name": "jsii.targets.java.maven.groupId",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "message": "Maven ArtifactID - package artifact id (e.g. core)",
    "name": "jsii.targets.java.maven.artifactId",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "filter": [Function],
    "message": "Maven Version Suffix - optional suffix appended to the end of the maven package's version field (e.g. .DEVPREVIEW)",
    "name": "jsii.targets.java.maven.versionSuffix",
    "type": "input",
    "when": [Function],
  },
  Object {
    "message": "Python Distname - PyPI distribution name for the package (e.g. module-name.core)",
    "name": "jsii.targets.python.distName",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "message": "Python Module - name of the generated Python module (e.g. module_name.core)",
    "name": "jsii.targets.python.module",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "message": ".NET Namespace - root namespace under which types will be declared (e.g. Amazon.Module)",
    "name": "jsii.targets.dotnet.namespace",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "message": ".NET Package Id - identifier of the package in the NuGet registry (e.g. Amazon.Module)",
    "name": "jsii.targets.dotnet.packageId",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "filter": [Function],
    "message": ".NET Icon Url - optional url of the icon to be shown in the NuGet gallery (e.g. https://raw.githubusercontent.com/module-icon.png)",
    "name": "jsii.targets.dotnet.iconUrl",
    "type": "input",
    "when": [Function],
  },
  Object {
    "default": "",
    "filter": [Function],
    "message": ".NET Version Suffix - optional suffix that will be appended at the end of the NuGet package's version field, must begin with a \\"-\\" (e.g. -devpreview)",
    "name": "jsii.targets.dotnet.versionSuffix",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
  Object {
    "default": false,
    "message": ".NET Sign Assembly - whether the assembly should be strong-name signed. Defaults to false when not specified",
    "name": "jsii.targets.dotnet.signAssembly",
    "type": "confirm",
    "when": [Function],
  },
  Object {
    "default": "",
    "message": ".NET Assembly Originator Key File - path to the strong-name signing key to be used (e.g. ../../key.snk)",
    "name": "jsii.targets.dotnet.assemblyOriginatorKeyFile",
    "type": "input",
    "validate": [Function],
    "when": [Function],
  },
]
`;
